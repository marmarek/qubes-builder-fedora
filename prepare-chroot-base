#!/bin/bash
# vim: set ts=4 sw=4 sts=4 et :

set -e
if [ "${VERBOSE:-0}" -ge 2 -o "${DEBUG:-0}" -eq 1 ]; then
    set -x
else
    YUM_OPTS="$YUM_OPTS -q"
fi

PLUGIN_DIR="`dirname $0`"

INSTALLDIR=$1
DIST=$2

RPM_VERSION="$(rpm --version | awk '{print $3}')"

if [ "$(printf '%s\n' "$RPM_VERSION" "4.14.0" | sort -V | head -n1)" = "4.14.0" ]; then
    PGP_INVALID='SIGNATURES NOT OK'
    PGP_NOTSIGNED='signatures OK'
else
    PGP_INVALID='PGP'
    PGP_NOTSIGNED='pgp'
fi

DOWNLOADDIR="${CACHEDIR}/base_rpms"

if [ "${DIST#fc}" != "${DIST}" ]; then
    YUM=dnf
    DISTRIBUTION="fedora"
    DIST_VER="${DIST#fc}"
fi

if [ "${DIST#centos}" != "${DIST}" ]; then
    YUM=yum
    DISTRIBUTION="centos"
    DIST_VER="${DIST#centos}"
fi

YUM="yum --downloaddir=${DOWNLOADDIR} --downloadonly install"
if type yumdownloader >/dev/null 2>/dev/null; then
    # debian does not have --downloadonly plugin
    YUM="yumdownloader --resolve --destdir=${DOWNLOADDIR}"
elif type dnf >/dev/null 2>/dev/null; then
    YUM="dnf $YUM_OPTS --releasever "${DIST_VER}" --downloaddir=${DOWNLOADDIR} --downloadonly install"
fi

if ! [ -f "${INSTALLDIR}/tmp/.prepared_base" ]; then
    echo "-> Initializing RPM database..."
    RPM_OPTS=()
    if [ -e /etc/debian_version ] || grep -q openSUSE /etc/os-release; then
        # Debian by default keep rpmdb in ~/.rpmdb
        # OpenSUSE by default keep rpmdb in /usr/lib/sysimage/rpm
        RPM_OPTS+=("--define=_dbpath %{_var}/lib/rpm")
    fi
    rpm "${RPM_OPTS[@]}" --initdb --root=${INSTALLDIR}

    if [ "${DISTRIBUTION}" = "fedora" ]; then
        rpm "${RPM_OPTS[@]}" --import --root=${INSTALLDIR} \
            ${PLUGIN_DIR}/keys/RPM-GPG-KEY-fedora-${DIST_VER}-primary
    fi

    if [ "${DISTRIBUTION}" = "centos" ]; then
        rpm "${RPM_OPTS[@]}" --import --root=${INSTALLDIR} \
            ${PLUGIN_DIR}/keys/RPM-GPG-KEY-CentOS-${DIST_VER}\
            ${PLUGIN_DIR}/keys/RPM-GPG-KEY-EPEL-${DIST_VER}
    fi

    echo "-> Retreiving core RPM packages..."

    if [ "${DISTRIBUTION}" = "fedora" ]; then
        INITIAL_PACKAGES="filesystem setup fedora-release"
        if [ "${DIST_VER}" -ge 22 ]; then
            INITIAL_PACKAGES="$INITIAL_PACKAGES dnf dnf-plugins-core"
        else
            INITIAL_PACKAGES="$INITIAL_PACKAGES yum yum-utils"
        fi
        if [ "${DIST_VER}" -ge 25 ]; then
            # libcrypt conflicts with libcrypt-nss and yumdownloader is stupid
            # enough to try them both
            INITIAL_PACKAGES="--exclude=libcrypt $INITIAL_PACKAGES"
        fi

        if [ "${DIST_VER}" -ge 26 ]; then
            # coreutils conflicts with coreutils-single
            INITIAL_PACKAGES="--exclude=coreutils-single $INITIAL_PACKAGES"
        fi

        if [ "${DIST_VER}" -ge 27 ]; then
            # curl-minimal conflicts with curl, same for libcurl
            INITIAL_PACKAGES="--exclude=curl --exclude=libcurl $INITIAL_PACKAGES"
        fi

        mkdir -p "${DOWNLOADDIR}"
        yumconf=$(mktemp)

        if [ "x${FEDORA_MIRROR}" != "x" ]; then
            awk '
            BEGIN {
                mirror=ARGV[1];     delete ARGV[1];
                releasever=ARGV[2]; delete ARGV[2];
            }
            {
                gsub("^metalink", "#metalink");
                gsub("^#baseurl=.*/(linux|fedora)/", "baseurl=" mirror "/");
                gsub("\\$releasever", releasever);
                print;
            }' "${FEDORA_MIRROR%/}" "${DIST_VER}" \
                < "${PLUGIN_DIR}"/yum-bootstrap-fedora.conf \
                > "$yumconf"
        else
            sed -e "s/\\\$releasever/${DIST_VER}/g" \
                < "${PLUGIN_DIR}"/yum-bootstrap-fedora.conf \
                > "$yumconf"
        fi
    fi

    if [ "${DISTRIBUTION}" = "centos" ]; then
        INITIAL_PACKAGES="filesystem setup centos-release epel-release yum yum-utils"

        # Add groupadd, su etc.
        INITIAL_PACKAGES="$INITIAL_PACKAGES shadow-utils util-linux"

        mkdir -p "${DOWNLOADDIR}"
        yumconf=$(mktemp)
        yumconftmp=$(mktemp)

        sed -e "s/\\\$releasever/${DIST_VER}/g" \
            < "${PLUGIN_DIR}"/yum-bootstrap-centos.conf \
            > "$yumconf"

        if [ "x${CENTOS_MIRROR}" != "x" ]; then
            awk '
            BEGIN {
                mirror=ARGV[1];     delete ARGV[1];
            }
            {
                gsub("^mirrorlist", "#mirrorlist");
                gsub("^#baseurl=.*/(centos|CentOS)/", "baseurl=" mirror "/");
                print;
            }' "${CENTOS_MIRROR%/}" \
                < "$yumconf" \
                > "$yumconftmp"
            mv $yumconftmp $yumconf
        fi

        if [ "x${EPEL_MIRROR}" != "x" ]; then
            awk '
            BEGIN {
                mirror=ARGV[1];     delete ARGV[1];
            }
            {
                gsub("^metalink", "#metalink");
                gsub("^#baseurl=.*/epel/", "baseurl=" mirror "/");
                print;
            }' "${EPEL_MIRROR%/}" \
                < "$yumconf" \
                > "$yumconftmp"
            mv $yumconftmp $yumconf
        fi
    fi

    $YUM -c "$yumconf" -y \
        --installroot="${INSTALLDIR}" \
        ${INITIAL_PACKAGES}
    rm -f "$yumconf"

    echo "-> Verifying signatures..."
    set +x
    for file in "${DOWNLOADDIR}"/*; do
        result=$(rpm "${RPM_OPTS[@]}" --root=${INSTALLDIR} --checksig "${file}") || {
            echo "Filename: ${file} failed verification.  Exiting!"
            exit 1
        }
        result_status="${result##*:}"
        echo "${result_status}" | grep -q "$PGP_INVALID" && {
            echo "Filename: ${file} contains an invalid PGP signature. Exiting!"
            exit 1
        }
        echo "${result_status}" | grep -q "$PGP_NOTSIGNED" || {
            echo "Filename: ${file} is not signed.  Exiting!"
            exit 1
        }
    done

    echo "-> Printing hashes of downloaded packages:"
    sha256sum "${DOWNLOADDIR}/"*.rpm
    if [ "${VERBOSE:-0}" -ge 2 -o "${DEBUG:-0}" -eq 1 ]; then
        set -x
    fi

    echo "-> Installing core RPM packages..."
    rpm "${RPM_OPTS[@]}" -U --replacepkgs --root="${INSTALLDIR}" "${DOWNLOADDIR}/"*.rpm || exit 1
    for f in null urandom zero random console; do
        cp -a /dev/$f $INSTALLDIR/dev/
    done

    if [ "${DISTRIBUTION}" = "fedora" ]; then
        if [ "x$FEDORA_MIRROR" != "x" ]; then
            sed -i "s/^metalink/#metalink/g" "${INSTALLDIR}/etc/yum.repos.d/fedora.repo" "${INSTALLDIR}/etc/yum.repos.d/fedora-updates.repo"
            sed -i "s/#baseurl/baseurl/g" "${INSTALLDIR}/etc/yum.repos.d/fedora.repo" "${INSTALLDIR}/etc/yum.repos.d/fedora-updates.repo"
        fi
    fi

    if [ "${DISTRIBUTION}" = "centos" ]; then
        # For compatibility with others packages spec Centos 7 <=> Fedora 20
        echo "%fedora 20" >> ${INSTALLDIR}/etc/rpm/macros.dist
    fi

    touch "${INSTALLDIR}/tmp/.prepared_base"
fi
